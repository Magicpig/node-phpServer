{
  "name": "sudo-block",
  "version": "0.3.0",
  "description": "Block users from running your app with root permissions",
  "keywords": [
    "sudo",
    "root",
    "permissions",
    "uid",
    "block",
    "prevent",
    "stop"
  ],
  "license": "MIT",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "files": [
    "sudo-block.js"
  ],
  "main": "sudo-block.js",
  "repository": {
    "type": "git",
    "url": "sindresorhus/sudo-block"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "chalk": "~0.3.0"
  },
  "devDependencies": {
    "mocha": "~1.14.0",
    "sinon": "~1.7.3"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "# sudo-block [![Build Status](https://secure.travis-ci.org/sindresorhus/sudo-block.png?branch=master)](http://travis-ci.org/sindresorhus/sudo-block)\n\n> Block users from running your app with root permissions.\n\n![screenshot](screenshot.png)\n\n\n## Install\n\nInstall with [npm](https://npmjs.org): `npm install --save sudo-block`\n\n\n## Example\n\n```js\nvar sudoBlock = require('sudo-block');\nsudoBlock();\n```\n\n\n## API\n\n### sudoBlock(*message*)\n\nWhen a file containing this function is run with root permissions it will exit and show an error message telling the user how to fix the problem so they don't have to run it with `sudo`. Accepts a custom `message`.\n\n\n### sudoBlock.isRoot\n\nBoolean indicating whether the current user is `root`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "sudo-block@0.3.0",
  "dist": {
    "shasum": "fd7419e4d0606e0598c3fa627be12a871453c7bb"
  },
  "_from": "sudo-block@",
  "_resolved": "https://registry.npmjs.org/sudo-block/-/sudo-block-0.3.0.tgz"
}
